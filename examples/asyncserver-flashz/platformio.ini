[platformio]
default_envs = flashz
extra_configs =
  user_*.ini

[common]
framework = arduino
platform = espressif32
board = wemos_d1_mini32
board_build.filesystem = littlefs
lib_deps =
    me-no-dev/AsyncTCP
    https://github.com/me-no-dev/ESPAsyncWebServer
    https://github.com/vortigont/esp32-flashz
build_flags =
    -D FZ_HTTP_ASYNC
    -D BUILD_ENV=$PIOENV
upload_speed = 460800
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
extra_scripts =
    post:post_flashz.py

[debug]
build_flags =
    -DCORE_DEBUG_LEVEL=5
    -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG

[env]
extends = common

; default Arduino ESP32
[env:flashz]
extends = env
build_flags =
    ${env.build_flags}
    -DCORE_DEBUG_LEVEL=3
    -DLOG_LOCAL_LEVEL=ESP_LOG_INFO

; build lib with lot's of debug enabled
[env:flashz_debug]
extends = env
build_flags =
    ${env.build_flags}
    ${debug.build_flags}

; this target will copress and do OTA upload to specified URL
[env:flashz_ota]
extends = env
; compress image before uploading
OTA_compress = true
; replace url with address of your esp32 device
OTA_url = http://192.168.168.25/update
build_flags =
    ${env.build_flags}
    -DCORE_DEBUG_LEVEL=3
    -DLOG_LOCAL_LEVEL=ESP_LOG_INFO

; ESP32-S2 platform (for CI testing)
[env:esp32-s2]
extends = env
board = featheresp32-s2
; board = ttgo-t8-esp32-s2
; board_build.flash_mode = qio
build_flags =
    ${env.build_flags}
    ${debug.build_flags}

; ESP32-c3 risc-v platform (for CI testing)
[env:esp32c3]
extends = env
board = ttgo-t-oi-plus
lib_deps =
    me-no-dev/AsyncTCP
    https://github.com/vortigont/ESPAsyncWebServer#hotfixes
    https://github.com/vortigont/esp32-flashz
build_flags =
    ${env.build_flags}
    ${debug.build_flags}
